.. _cpp-whats-new:

==========
What's New
==========

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. facet::
   :name: genre
   :values: reference

.. meta::
   :keywords: update, new feature, deprecation, upgrade, driver

Learn what's new in:

* :ref:`Version 3.10.0 <version-3.10.0>`
* :ref:`Version 3.9 <version-3.9>`

.. _upcoming-breaking-changes:

.. _version-3.10.0:

What's New in 3.10.0
--------------------

.. warning:: Breaking Changes

   This driver version contains the following breaking changes:
   
   - Drops support for ``find_package(libbsoncxx)`` and ``find_package(libmongocxx)``.
     Use ``find_package(bsoncxx)`` and ``find_package(mongocxx)``
     instead.
   - Drops support for the ``LIBBSONCXX_*`` and ``LIBMONGOCXX_*`` CMake variables
     provided by the legacy CMake package config files. Use the ``mongo::bsoncxx_*`` and
     ``mongo::mongocxx_*`` CMake targets instead.
   - Removes the experimental C++ standard library (``BSONCXX_POLY_USE_STD_EXPERIMENTAL``)
     as a polyfill option.

The v3.10.0 release includes the following new features:

- Adds forward headers that provide non-defining declarations of ``bsoncxx`` and
  ``mongocxx`` class types.
- -  The driver does not support user-defined forward declarations
     of any library entity. To obtain the declaration or definition of a library entity,
     always include the corresponding header.
- The CMake option ``ENABLE_BSONCXX_USE_POLY_IMPLS`` allows selecting
  ``bsoncxx`` implementations of C++17 polyfills by default when no polyfill library is
  requested. This option is ``OFF`` by default.
- The CMake option ``BSONCXX_POLY_USE_IMPLS`` allows selecting ``bsoncxx`` implementations
  of C++17 polyfills instead of external libraries or the C++ standard library. This
  option is ``OFF`` by default.
- The ``bsoncxx::v_noabi`` and ``mongocxx::v_noabi`` namespaces are no longer declared inline.
  Root namespace declarations are still supported and expected to remain equivalent to
  their prior definitions. For example, ``bsoncxx::document`` is still equivalent to
  ``bsoncxx::v_noabi::document``, and ``mongocxx::client`` is still equivalent to
  ``mongocxx::v_noabi::client``. Argument-dependent lookup and template instantiations
  are expected to remain equivalent to their prior behavior.
- By default, when library filenames are compiled with MSVC (as detected by CMake's ``MSVC``
  variable), they're now embedded with an ABI tag string. These strings are similar to
  the following:
  
  .. code-block:: bash

     bsoncxx-v_noabi-rhs-x64-v142-md.lib

  To disable this behavior, set ``ENABLE_ABI_TAG_IN_LIBRARY_FILENAMES=OFF`` as part of
  your CMake configuration.

  The ABI tag string can also be embedded in pkg-config metadata filenames, similar to the
  following:
    
  .. code-block:: bash
      
     libbsoncxx-v_noabi-rhs-x64-v142-md.pc
       
  To enable this behavior, set ``ENABLE_ABI_TAG_IN_LIBRARY_FILENAMES=ON`` and
  ``ENABLE_ABI_TAG_IN_PKGCONFIG_FILENAMES=ON`` as part of your CMake configuration.

.. _version-3.9:

What's New in 3.9
-----------------

.. warning:: Breaking Changes

   This driver version contains the following breaking changes:

   - Removes support for exported targets from the CMake project build tree
   - Drops support for macOS 10.14, macOS 10.15, and Ubuntu 14.04
   - Requires MongoDB C Driver v1.25.0 or later to support the ``FetchContent`` module
     and for consistency with the MongoDB C Driver
   - Requires CMake v3.15 or later

The v3.9 release includes the following new features:

- The {+driver-short+} container image is now available on
  `Docker hub. <https://hub.docker.com/r/mongodb/mongo-cxx-driver>`__
- The driver automatically downloads the MongoDB C Driver dependency if you don't provide
  it.
- The driver no longer builds tests as part of the ``all`` target. To build tests,
  set ``BUILD_TESTING=ON`` as part of your CMake configuration.
- The driver improves handling of how it downloads the
  `MNMLSTC Core <https://github.com/mnmlstc/core>`__ polyfill library, if not
  provided by the system, in the following ways:
- - Uses the ``FetchContent`` module to download and build the library instead
    of the ``ExternalProject`` module
- - Does not patch ``include`` directives in MNMLSTC Core headers
- Adds the CMake option ``MONGOCXX_OVERRIDE_DEFAULT_INSTALL_PREFIX``. If this option is set to
  ``TRUE``, the ``CMAKE_INSTALL_PREFIX`` option defaults to the build directory.
  The default value of this option is ``TRUE``.
- Adds API to manage
  :atlas:`Atlas Search indexes. <atlas-search/index-definitions/#std-label-ref-index-definitions>`
- Adds the ``VERSIONINFO`` resource to ``bsoncxx.dll`` and ``mongocxx.dll``.
- Explicitly documents that throwing an exception from an APM callback is undefined behavior.
- Does not prematurely install MNMLSTC Core headers during the CMake build step.
- Requires that a MongoDB C Driver CMake package is found via ``find_dependency()`` for all
  installed {+driver-short+} package configurations.
- Documents availability of the {+driver-short+} on
  `vcpkg <https://vcpkg.io/en/package/mongo-cxx-driver>`__ and
  `Conan. <https://conan.io/center/recipes/mongo-cxx-driver>`__
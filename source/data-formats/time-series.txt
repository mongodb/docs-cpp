.. _cpp-time-series:

================
Time Series Data
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the {+driver-short+} to store
and interact with **time series data**.

Time series data consists of any data collected over time, metadata that
describes the measurement, and the time of the measurement. The following table
describes sample situations for which you could store time series data:

.. list-table::
   :widths: 33, 33, 33
   :header-rows: 1
   :stub-columns: 1

   * - Situation
     - Measured Quantity
     - Metadata

   * - Recording monthly sales by industry
     - Revenue in USD
     - Company, country

   * - Tracking weather changes
     - Precipitation level
     - Location, sensor type

   * - Recording fluctuations in housing prices
     - Monthly rent price
     - Location, currency

.. _cpp-time-series-create:

Create a Time Series Collection
-------------------------------

.. important:: Server Version for Time Series Collections

   To create and interact with time series collections, you must be
   connected to a deployment running {+mdb-server+} 5.0 or later.

You can create a time series collection to store time series data.  
To create a time series collection, perform the following actions:

1. Create a BSON document that specifies properties of
   your time series collection.

#. Call the ``create_collection()`` method and pass the collection
   name and the time series BSON document as arguments.

Example
~~~~~~~

This example creates the ``sept2023`` time series collection in the
``precipitation`` database with the following configuration:

- ``timeField`` is set to ``"precipitation_mm"``
- ``metaField`` is set to ``"location"``
- ``granularity`` is set to ``"minutes"``

.. literalinclude:: /includes/data-formats/time-series-cpp
   :start-after: begin-create-ts
   :end-before: end-create-ts
   :language: php
   :dedent:

To verify that you successfully created the time series collection, run
the ``list_collections()`` method on the database and print the results:

.. io-code-block::
   :copyable: true

   .. input:: /includes/data-formats/time-series-cpp
      :start-after: start-list-colls
      :end-before: end-list-colls
      :language: php
      :dedent:

   .. output::
      :language: console
      :visible: false

      { "name" : "sept2023", "type" : "timeseries", "options" : { "timeseries" :
      { "timeField" : "precipitation_mm", "metaField" : "location", "granularity" :
      "minutes", "bucketMaxSpanSeconds" : 86400 } }, "info" : ... }

.. _cpp-time-series-query:

Query a Time Series Collection
------------------------------

You can use the same syntax and conventions to query a time series
collection as you use when performing read or aggregation operations on
other collections. To find more information about these operations, see
the :ref:`Additional Information <cpp-time-series-addtl-info>` section.

.. _cpp-time-series-addtl-info:

Additional Information
----------------------

To learn more about the concepts mentioned in this guide, see the
following Server manual entries:

- :manual:`Time Series </core/timeseries-collections/>`
- :manual:`Create and Query a Time Series Collection </core/timeseries/timeseries-procedures/>`
- :manual:`Set Granularity for Time Series Data </core/timeseries/timeseries-granularity/>`

To learn more about performing read operations, see :ref:`cpp-read`.

To learn more about performing aggregation operations, see :ref:`cpp-aggregation`.

API Documentation
~~~~~~~~~~~~~~~~~

To learn more about the methods and types mentioned in this
guide, see the following API documentation:

- `create_collection() <{+api+}/classmongocxx_1_1v__noabi_1_1database.html#a8989a894e021e87d704288a8d2522069>`__
- `list_collections() <{+api+}/classmongocxx_1_1v__noabi_1_1database.html#aacef87f0bc585c536ce0dfae67cfefe8>`__
